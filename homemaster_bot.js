const TelegramBot = require('node-telegram-bot-api');
const rp = require('request-promise')  ;
const google_calendar_request = require('./google_calendar_request');
const _ = require('lodash');
const NodeCache = require( "node-cache" );
//–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑ –≥—É–≥–ª–∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–ª–∏ –∏–∑ –≥—É–≥–ª—Ç–∞–±–ª–∏—Ü
var request_schedule_from_google_calendar = true;

// replace the value below with the Telegram token you receive from @BotFather 
const token = process.argv[2];
	const keyboard_0 = [
		['–ü—Ä–∞–π—Å',
		'–í—ã–±–æ—Ä —É—Å–ª—É–≥',
		'–í—ã–±–æ—Ä –¥–Ω—è'/*'–í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è'*/
		],
		['–ó–∞–ø–∏—Å–∞—Ç—å—Å—è','–û—Ç–∫–∞–∑–∞—Ç—å—Å—è']
	];

	const keyboard = [];
//–ë–î –≤ –ø–∞–º—è—Ç–∏ 	

const myCache = new NodeCache();
const myCache2 = new NodeCache();
const myCache3 = new NodeCache();
const myCache4 = new NodeCache();//l–¥–µ–Ω—å –∏ –≤—Ä–µ–º—è
const myCache5 = new NodeCache();//–¥–µ–Ω—å
const myCache6 = new NodeCache();//–≤—Ä–µ–º—è
const myCache7 = new NodeCache();//—Ñ–ª–∞–≥ —Å–ª–µ–¥.–Ω–µ–¥–µ–ª–∏

//–¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
const week_days_2 = ['–ü–Ω','–í—Ç','–°—Ä','–ß—Ç','–ü—Ç','–°–±','–í—Å'];

// Create a bot that uses 'polling' to fetch new updates
const bot = new TelegramBot(token, {polling: true});

bot.onText(/–ó–∞–ø–∏—Å–∞—Ç—å—Å—è/, (msg, match) => {
	const chatId = msg.chat.id;
	//const price_img = new inputMediaUploadedPhoto('C:\Users\admin\Pictures\pricelist.jpg');
	//  bot.sendPhoto(chatId, 'https://drive.google.com/open?id=0B8qRomgBHgAqVXF5ZTliQUZGeWs');
	const data = 
	'@'+msg.chat.username+' '+
	'–§–ò–û = '+msg.chat.first_name+' '+' '+msg.chat.last_name
	+' id = '+msg.from.id+' '
	;	
	const order_status = define_order_status(msg,myCache,myCache4);
	const zero_sum = (order_status.indexOf('–Ω–∞ —Å—É–º–º—É 0') > 0)? true: false;
	const zero_time = (order_status.indexOf('–í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ') > 0)? true: false;
	if (zero_sum) {bot.sendMessage(chatId,'–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —É—Å–ª—É–≥–∏. –ü–æ–∫–∞ –Ω–µ –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –í—ã–±–æ—Ä —É—Å–ª—É–≥.üòä');} 
	if (zero_time) {bot.sendMessage(chatId,'–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –¥–µ–Ω—å –∏ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞. –ü–æ–∫–∞ –Ω–µ –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –í—ã–±–æ—Ä –¥–Ω—è.üòä');} 
	if (!zero_time&&!zero_sum) { 
		const message_id = bot.sendMessage('@InnoShugaringOrders', data+' '+order_status);
		eraseOrder()(msg, match);
		bot.sendMessage(chatId,'–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ.üòä');
	}
	//console.log('message_id',message_id);
	//console.log('username',msg.chat.username);
});

// Matches "/price"
//bot.onText(/(\/price|–ü—Ä–∞–π—Å)/, (msg, match) => {
bot.onText(/–ü—Ä–∞–π—Å/, (msg, match) => {
	const chatId = msg.chat.id;
	//const price_img = new inputMediaUploadedPhoto('C:\Users\admin\Pictures\pricelist.jpg');
	//  bot.sendPhoto(chatId, 'https://drive.google.com/open?id=0B8qRomgBHgAqVXF5ZTliQUZGeWs');
	bot.sendSticker(chatId, 'CAADAgADBAADWDTYD1xroz36pUNeAg');
});

const handleStart = (msg, match) => {
	const chatId = msg.chat.id;
	const opts = {
		reply_to_message_id: msg.message_id,
		reply_markup: JSON.stringify({
		keyboard: keyboard_0
		})
	};
	define_order_status(msg,myCache,myCache4,null);	
	bot.sendMessage(chatId,'–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ü—Ä–∞–π—Å–æ–º, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∏ –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–∏–µ–º.üòä', opts);
}

const eraseOrder = (shouldCall) => (msg, match) => {
	const chatId = msg.chat.id;
	myCache.del( "chatId");
	myCache4.del( "chatId");
	myCache4.del( "chatId");
	myCache5.del( "chatId");
	myCache6.del( "chatId");
	myCache7.del( "chatId");
	shouldCall && define_order_status(msg,myCache,myCache4,null);
}

// Matches "/start"
bot.onText(/\/start/, handleStart);
// Matches "–ù–∞–∑–∞–¥" 
// –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ç–∞—Ä—Ç /start
bot.onText(/–ù–∞–∑–∞–¥/, handleStart);

// Matches "/order"
//bot.onText(/(\/order|–í—ã–±–æ—Ä —É—Å–ª—É–≥)/, (msg, match) => {
bot.onText(/–í—ã–±–æ—Ä —É—Å–ª—É–≥/, (msg, match) => {
	const chatId = msg.chat.id;

	const opts = {
		reply_to_message_id: msg.message_id,
		reply_markup: JSON.stringify({
		keyboard: keyboard
		})
	};
	define_order_status(msg,myCache,myCache4, opts);	
	bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–∞–∑', opts);

});

function bot_onText_Request_to_google_calendar(params,AdditionalButtons){  //–¥–µ–ª–∞–µ–º rest –∑–∞–ø—Ä–æ—Å –≤ –≥—É–≥–ª–∫–∞–ª–µ–Ω–¥–∞—Ä—å
	if (params.next_week){myCache7.set( "chatId", true );} else {myCache7.del( "chatId");}//–∑–∞–ø–æ–º–∏–Ω–∞–µ–º –ø—Ä–∏–∑–Ω–∞–∫ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏
	google_calendar_request.request({next_week:params.next_week,get_hours:params.get_hours,day:params.day},function(week_days_or_hours_from_url){
		if (AdditionalButtons){for(var i=0; i<AdditionalButtons.length;i++){week_days_or_hours_from_url.push(AdditionalButtons[i]);}}
		week_days_or_hours_from_url.push('–ù–∞–∑–∞–¥');
		var week_days_or_hours_from_url = _.chunk(week_days_or_hours_from_url,3); //—Ä–∞–∑–±–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –Ω–∞ —Ç–µ—Ç—Ä–∞–¥—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫ –±–æ—Ç–∞
		//console.log('week_days_or_hours_from_url',week_days_or_hours_from_url);
		const chatId = params.msg.chat.id;
		var opts = {
			reply_to_message_id: params.msg.message_id,
			reply_markup: JSON.stringify({
			keyboard: week_days_or_hours_from_url
			})
		};
		bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –ø—Ä–∏–µ–º–∞, –∑–∞—Ç–µ–º –≤—Ä–µ–º—è. –ü–æ—Å–ª–µ  —ç—Ç–æ–≥–æ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏—Ç–µ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è. –ó–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', opts);
	});/**/
}
// Matches "–í—ã–±–æ—Ä –¥–Ω—è"
bot.onText(/–í—ã–±–æ—Ä –¥–Ω—è/, (msg, match) => {
if (request_schedule_from_google_calendar) {bot_onText_Request_to_google_calendar({msg:msg,next_week:false},['–°–ª–µ–¥.–Ω–µ–¥–µ–ª—è']);}
else {bot_onText_Request_to_google_sheet(msg,['–°–ª–µ–¥.–Ω–µ–¥–µ–ª—è']);}  //–¥–µ–ª–∞–µ–º rest –∑–∞–ø—Ä–æ—Å –∫ —Å–∫—Ä–∏–ø—Ç—É –≥—É–≥–ª—Ç–∞–±–ª–∏—Ü—ã	//deprecared: –ø–æ–¥–ª–µ–∂–∏—Ç –∑–∞–º–µ–Ω–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å –≤ –≥—É–≥–ª–∫–∞–ª–µ–Ω–¥–∞—Ä—å}
});


// Matches "–°–ª–µ–¥.–Ω–µ–¥–µ–ª—è"
bot.onText(/–°–ª–µ–¥.–Ω–µ–¥–µ–ª—è/, (msg, match) => {
/*var options = {
    uri: 'https://script.google.com/macros/s/AKfycbx2k0kmZGPabdMgoeULgb4WKS6XjLQGWn6VCSOtrRqY1MjYtsk/exec',
    qs: {
      get_week_days:true,
	  next_week:true
    },
    json: true
  };
 rp(options)
    .then(function (data) {
	var _ = require('lodash');
	data.days.push('–ù–∞–∑–∞–¥');
	var week_days_from_url = _.chunk(data.days,3);
	const chatId = msg.chat.id;
	myCache7.set( "chatId", true );
	var opts = {
		reply_to_message_id: msg.message_id,
		reply_markup: JSON.stringify({
		keyboard: week_days_from_url
		})
	};
	bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –ø—Ä–∏–µ–º–∞, –∑–∞—Ç–µ–º –≤—Ä–µ–º—è. –ü–æ—Å–ª–µ  —ç—Ç–æ–≥–æ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏—Ç–µ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è. –ó–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', opts);

	  })
    .catch(function(err) {
      console.log(err);
    });
*/
if (request_schedule_from_google_calendar) {bot_onText_Request_to_google_calendar({msg:msg,next_week:true});}
else {bot_onText_Request_to_google_sheet(msg);}  //–¥–µ–ª–∞–µ–º rest –∑–∞–ø—Ä–æ—Å –∫ —Å–∫—Ä–∏–ø—Ç—É –≥—É–≥–ª—Ç–∞–±–ª–∏—Ü—ã	//deprecared: –ø–æ–¥–ª–µ–∂–∏—Ç –∑–∞–º–µ–Ω–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å –≤ –≥—É–≥–ª–∫–∞–ª–µ–Ω–¥–∞—Ä—å}

});


// Matches –¥–µ–Ω—å –∏ –≤—Ä–µ–º—è...
bot.onText(/(..:.M)/, (msg, match) => {
	const chatId = msg.chat.id;
	//obj = { my: "Special", variable: 42 };
	myCache4.set( "chatId", myCache4.get(match[1]) );
	define_order_status(msg,myCache,myCache4);
});
// Matches –¥–µ–Ω—å ...
bot.onText(/(–ü–Ω|–í—Ç|–°—Ä|–ß—Ç|–ü—Ç|–°–±|–í—Å)/, (msg, match) => {
	myCache5.set( "chatId", match[1] );
	bot_onText_Request_to_google_calendar({msg:msg,next_week:((myCache7.get("chatId"))?true:false),get_hours:true,day:match[1]});
});

// Matches –≤—Ä–µ–º—è...
bot.onText(/(\d{1,2})/, (msg, match) => {
	const chatId = msg.chat.id;
	myCache6.set( "chatId", match[1] );
	handleStart(msg, match) ;
});
// Matches "–£—Å–∏–∫–∏" –∏ –≤—Å–µ —É—Å–ª—É–≥–∏...
bot.onText(/(–£—Å–∏–∫–∏|–ü—Ä–µ–¥–ø–ª–µ—á—å—è|–ü–æ–¥–º—ã—à–∫–∏|–ü–æ–ª–æ—Å–∫–∞|–ë–∏–∫–∏–Ω–∏|–ë–µ–¥—Ä–∞|–ì–æ–ª–µ–Ω—å|–ù–æ–≥–∏)/, (msg, match) => {
	const chatId = msg.chat.id;
	//obj = { my: "Special", variable: 42 };
	myCache.set( "chatId", myCache.get( "chatId" )+myCache.get(match[1]) );
	define_order_status(msg,myCache,myCache4);
	bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É.');
});

bot.onText(/–û—Ç–∫–∞–∑–∞—Ç—å—Å—è.*/, eraseOrder(true));

// Listen for any kind of message. There are different kinds of
// messages.
bot.on('message', (msg) => {
	// const chatId = msg.chat.id;
	// const order = myCache.get( "chatId" );
	// const order_status = (order== undefined) ? '–ø—É—Å—Ç.':'—á—Ç–æ-—Ç–æ –µ—Å—Ç—å.';
	// // send a message to the chat acknowledging receipt of their message
	// console.log( myCache.get( "chatId" ) );
	// bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É. –°–µ–π—á–∞—Å –í–∞—à –∑–∞–∫–∞–∑: '+order_status);
});

function define_order_status(msg,myCache,myCache4, opts){
	const chatId = msg.chat.id;
	const order = removeDuplicateCharacters(myCache.get( "chatId" ));
//	const time = (typeof(myCache4.get( "chatId" )) === 'undefined')? '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ':myCache4.get( "chatId" );
	const day = (typeof(myCache5.get( "chatId" )) === 'undefined')? '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ':myCache5.get( "chatId" );
	const time = (typeof(myCache6.get( "chatId" )) === 'undefined')? '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ':myCache6.get( "chatId" );
	const next_week = (myCache7.get( "chatId" ))? '–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ':'–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ';
	
	var day_time = next_week+' –≤ '+day+' c '+time+':00';
	day_time = (day == '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ' && time == '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ')?'–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ':day_time;
	
	const status = '–°–µ–π—á–∞—Å –í–∞—à –∑–∞–∫–∞–∑: '+getOrderText(order)+ ' –Ω–∞ —Å—É–º–º—É '+getOrderSum(order)+' —Ä—É–±.'+' –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ '+day_time; 
	bot.sendMessage(chatId, status );
	return status;
}

function removeDuplicateCharacters(string){
try{
 return string
	.split('')
	.filter(function(item, pos, self) {
    return self.indexOf(item) == pos;
	})
.join('');
}
catch(err){
return string;
}
}

function getOrderText(str){
	const result = (str || '').split('')
		.map((charAtcount) => myCache2.get(charAtcount))
		.filter((value) => !!value)
		.join(', ')
//	console.log('RESULT', result)
	return result
}

function getOrderSum(str){
	const result = (str || '').split('')
		.map((charAtcount) => myCache3.get(charAtcount))
		.filter((value) => !!value)
		.reduce(function(sum, price){return sum+price},0);
//	console.log('SUM', result)
	return result
}
